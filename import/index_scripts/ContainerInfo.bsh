import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.marc4j.marc.Record;


// define the base level indexer so that its methods can be called from the script.
// note that the SolrIndexer code will set this value before the script methods are called.
org.solrmarc.index.SolrIndexer indexer = null;


private final static Pattern PAGE_RANGE_PATTERN1 = Pattern.compile("\\s*(\\d+)\\s*-\\s*(\\d+)$");
private final static Pattern PAGE_RANGE_PATTERN2 = Pattern.compile("\\s*\\[(\\d+)\\]\\s*-\\s*(\\d+)$");
private final static Pattern PAGE_RANGE_PATTERN3 = Pattern.compile("\\s*(\\d+)\\s*ff");


public String getPageRange(Record record) {
    String field_value = indexer.getFirstFieldVal(record, "936h");
    if (field_value == null)
	return null;

    Matcher matcher1 = PAGE_RANGE_PATTERN1.matcher(field_value);
    if (matcher1.matches())
        return matcher1.group(1) + "-" + matcher1.group(2);

    Matcher matcher2 = PAGE_RANGE_PATTERN2.matcher(field_value);
    if (matcher2.matches())
        return matcher2.group(1) + "-" + matcher2.group(2);

    Matcher matcher3 = PAGE_RANGE_PATTERN3.matcher(field_value);
    if (matcher3.matches())
        return matcher3.group(1) + "-";

    return null;
}


private final static Pattern YEAR_PATTERN = Pattern.compile("(\\d\\d\\d\\d)");


public String getContainerYear(Record record) {
    String field_value = indexer.getFirstFieldVal(record, "936j");
    if (field_value == null)
	return null;

    Matcher matcher = YEAR_PATTERN.matcher(field_value);
    return matcher.matches() ? matcher.group(1) : null;
}


private final static Pattern VOLUME_PATTERN = Pattern.compile("^\\s*(\\d+)$");


public String getContainerVolume(Record record) {
    String field_value = indexer.getFirstFieldVal(record, "936d");
    if (field_value == null)
	return null;

    Matcher matcher = VOLUME_PATTERN.matcher(field_value);
    return matcher.matches() ? matcher.group(1) : null;
}
