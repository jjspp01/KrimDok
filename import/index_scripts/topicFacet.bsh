/**
 * Custom script fuer topic_facets (nur Sachschlagworte)
 *
 * This can be used to override built-in SolrMarc custom functions.  If you change
 * this script, you will need to activate it in import/marc_local.properties before
 * it will be applied during indexing.
 */
import org.marc4j.marc.Record;
import org.marc4j.marc.ControlField;
import org.marc4j.marc.DataField;
import org.marc4j.marc.Subfield;

org.solrmarc.index.SolrIndexer indexer = null;

void ExtractTopics(Record record, String tag, char subfield_code, Set topics) {
    final Iterator fieldsIter = record.getVariableFields(tag).iterator();
    while (fieldsIter.hasNext()) {
        final DataField data_field = (DataField) fieldsIter.next();
        final Iterator subfieldIter = data_field.getSubfields(subfield_code).iterator();
        while (subfieldIter.hasNext())
              topics.add(subfieldIter.next().getData());
    }
}

/**
 * get the local subjects from LOK-tagged fields and get subjects from 936k and 689a subfields
 *
 *
 * LOK = Field
 * |0 689 = Subfield
 * |a Imperialismus = Subfield with local subject
 *
 *
 * @param  Record  record
 * @return Set of local subjects
 */
public Set getAllTopics(Record record) {
    Set topics = indexer.getAllSubfields(record, "600:610:611:630:650:653:656", " ");
    Iterator fieldsIter = record.getVariableFields("LOK").iterator();
    String dataString;
    String codeString;
    String pseudotag = "";
    String data = "";
    char formatCode = ' ';
    while (fieldsIter.hasNext()) {
        DataField lokfield = (DataField) fieldsIter.next(); List
        subfields = lokfield.getSubfields();
        if (subfields != null) {
            Iterator subfieldsIter = subfields.iterator();
            Subfield subfield;
            while (subfieldsIter.hasNext()) {
                subfield = (Subfield) subfieldsIter.next();

                codeString = subfield.getCode().toString(); // |0
                formatCode = codeString.length() > 0 ? codeString.charAt(0) : ' ';

                dataString = subfield.getData().toUpperCase(); // 689

                // Looking for 689-Tag
                if (formatCode == '0' && dataString.equals("689  ")) {
                    pseudotag =  subfield.getData(); // dataString 689
                }

                //Looking for local subject
                if (formatCode == 'a' && pseudotag.equals("689  ")) {
                    data =  subfield.getData();
                    if (data.length() > 1) {
                        topics.add(data);
                        data = "";
                        pseudotag = "";
                    }
                }
            }

        }
    }

    // Extract topics from all 936k and 689a subfields:
    ExtractTopics(record, "936", 'k', topics);
    ExtractTopics(record, "689", 'a', topics);

    return topics;
}


/**
 * Hole das Sachschlagwort aus 689|a (wenn 689|d != z oder f)
 *
 * @param  Record    record
 * @return Set    "topic_facet"
 */
public Set getFacetTopics(Record record) {
    Set result = indexer.getAllSubfields(record, "600x:610x:611x:630x:648x:650a:650x:651x:655x", " ");
    String topic_string = "";
    // Check 689 subfield a and d
    List fields = record.getVariableFields("689");
    Iterator fieldsIter = fields.iterator();
    if (fields != null) {
        DataField field;
        while(fieldsIter.hasNext()) {
            field = (DataField) fieldsIter.next();
            if (field.getSubfield('d') == null) {
                continue;
            }
            topic_string = field.getSubfield('d').getData().toLowerCase();
            if (topic_string.equals("f") || topic_string.equals("z")) {
                continue;
            }
            if (field.getSubfield('a') != null) {
                result.add(field.getSubfield('a').getData());
            }
        }
    }
    return result;
}