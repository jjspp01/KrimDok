###############################################################################
# marc_local.properties -- local overrides to standard VuFind MARC mappings.  #
#                          All settings in this file override equivalent      #
#                          settings in marc.properties.                       #
###############################################################################

id = 001, first
isil = script(local_arr.bsh), getIsils

# Uncomment the following settings to insert appropriate values for your site:
collection = script(local_arr.bsh), getCollections
institution = script(local_arr.bsh), getInstitution
building = ""

allfields = custom, getAllSearchableFieldsAsSet(92, 900)

format = script(format.bsh), getFormat, format_map.properties

author = 100abc, first
author2 = 110ab:111ab:700abc:710ab:711ab

title = script(title.bsh), getTitle
title_sub = script(title_subfield.bsh), getTitleSubfield("b")
title_short = script(title_subfield.bsh), getTitleSubfield("a")
title_auth = script(title.bsh), getTitle

edition = 250a

isbn = 020a
issn = 022a:440x:490x:730x:776x:780x:785x:773x
journal_issue = 773ag
#journal_year = script(ContainerInfo.bsh), getContainerYear

#page_count = 

#topic_facet = 689ad
topic_facet = script(topicFacet.bsh), getTopic

#local Data
local_signature = script(local_arr.bsh), getLocalSignaturesIsil
instituts_systematik1 = script(local_arr.bsh), getInstitutsSystematik1
instituts_systematik2 = script(local_arr.bsh), getInstitutsSystematik2
fid_systematik = script(local_arr.bsh), getFIDSystematik
fid_systematik1 = script(local_arr.bsh), getFIDSystematik1
fid_systematik2 = script(local_arr.bsh), getFIDSystematik2
fid_systematik3 = script(local_arr.bsh), getFIDSystematik3
fid_systematik4 = script(local_arr.bsh), getFIDSystematik4
fid_systematik5 = script(local_arr.bsh), getFIDSystematik5

# MBW und Serien
multipart_set = 000[19]
multipart_link = 773w[8-16]:800w[8-16]:810w[8-16]:811w[8-16]:830w[8-16]
multipart_part = script(getSuperMP.bsh), getSuperMP("773q:800q:773g:800v:810v:811v:830v")

#RVK
rvk = 936b
rvk-notation = 936a

#Normdaten
pndnum = 1000
gkdnum = 1100

#Abrufzeichen und Formate
abr = 935a
media = 935b
content = 935c

topic = script(local_arr.bsh), getAllTopics
genre = custom, getAllSubfields(655, " ")
geographic = custom, getAllSubfields(651, " ")
era = custom, getAllSubfields(648, " ")

genre_facet = 600v:610v:611v:630v:648v:650v:651v:655a:655v
geographic_facet = 600z:610z:611z:630z:648z:650z:651a:651z:655z
era_facet = 600d:610y:611y:630y:648a:648y:650y:651y:655y

# Uncomment the following settings to use the .bsh scripts in import/scripts/
# instead of the built-in SolrMarc functionality found in the .jar file.
# (by default, the scripts have the same behavior as the built-in functions,
# but the external scripts are easier to customize to your needs).
#format = script(format.bsh), getFormat, format_map.properties
#callnumber-subject = script(callnumber.bsh), getCallNumberSubject(090a:050a), callnumber_subject_map.properties
#callnumber-label = script(callnumber.bsh), getCallNumberLabel(090a:050a)
#publishDate = script(getdate.bsh), getDate
#illustrated = script(illustrated.bsh), isIllustrated
#dewey-hundreds = script(dewey.bsh), getDeweyNumber(082a:083a, 100), ddc22_map.properties(hundreds)
#dewey-tens = script(dewey.bsh), getDeweyNumber(082a:083a, 10), ddc22_map.properties(tens)
#dewey-ones = script(dewey.bsh), getDeweyNumber(082a:083a, 1), ddc22_map.properties(ones)
#dewey-full = script(dewey.bsh), getDeweySearchable(082a:083a)
#dewey-sort = script(dewey.bsh), getDeweySortable(082a:083a)

# Uncomment the following lines to track history of indexing times for RSS feeds,
# OAI-PMH server and other updates.  The parameter to these functions must be the 
# same fieldspec as the id setting above!
# IMPORTANT: Indexing this extra information will make extra database calls during
#            the indexing process and will likely slow things down significantly.
#first_indexed = custom, getFirstIndexed(001)
#last_indexed = custom, getLastIndexed(001)

# Uncomment the following line to index full text from URLs found in your MARC
# records.  All sorts of document formats are supported (PDF, Word Doc, ASCII
# text, HTML, etc.) The first parameter is a fieldspec showing which fields to use
# for URL retrieval.  The second parameter is optional -- if included, only files
# matching the specified suffix will be indexed.  Note that this functionality
# depends on a full text tool being installed on your system.  See the wiki for
# details:
#       http://vufind.org/wiki/importing_records#indexing_full_text
fulltext = custom, getFulltext(856e)

# Uncomment the following line if you want to index latitude/longitude data for
# Google Map recommendations:
#long_lat = custom, getLongLat

# Uncomment the following lines if you are indexing journal article data that uses
# the 773 field to describe the journal containing the article.  These settings
# assume the records have been formatted according to recommendation 4.1 found at:
#     http://www.loc.gov/marc/marbi/2003/2003-dp01.html
# If you have records using a different 773 format, you may need to write a custom
# indexing script to parse out volume/issue/number.
# Additionally, you will need to make sure articles have a format value of "Article."
# You can hard-code this if all of your records are articles, but if you need to
# distinguish between articles and non-articles, you will need to build a custom
# getFormat script.
#format = "Article"
#container_volume = script(ContainerInfo.bsh), getContainerVolume
container_issue = 936f
#container_start_page = script(PageInfo.bsh), getStartPage
#container_reference = 773g
#container_title = 773s
issue = 936e
pages = 936h

# Multi-part related bits:
container_ids_and_titles = script(multi_part.bsh), getContainerIdsWithTitles("800aw:810aw:830aw:773aw", "^\\([^)]+\\)(\.+)$")
containee_ids_and_titles = script(multi_part.bsh), getContaineeIdsWithTitles("CLDab")

urls_and_material_types = script(url_and_type.bsh), getUrlsAndMaterialTypes()
available_in_tubingen = SIG
article_page_range = script(ContainerInfo.bsh), getPageRange
